[
    {
        "name": "New Feature",
        "command": "feat",
        "description": "Adding a new feature - a new feature should be a new command or a new option to an existing command",
        "input": [
                "What is the feature about? ",
                "What is the scope of the feature? (ie: lang)"
        ],
        "message": "    feat($2): $1 :zap:"
    },
    {
        "name": "Bug Fix",
        "command": ["fix", "bug"],
        "description": "After a successful bug fix - a bug fix is a change that fixes a code malfunction",
        "input": [
            "How was the bug fixed? "
        ],
        "message": "    fix: $1 :bug:"
    },
    {
        "name": "Documentation",
        "command": "docs",
        "description": "Documentation changes - documentation are files that are not code",
        "input": [],
        "message": "    docs: $1 :memo:"
    },
    {
        "name": "Refactor",
        "command": "refactor",
        "description": "Refactoring changes - refactoring code, changing variable names, etc.",
        "input": [
            "How was the refactor performed? "
        ],
        "message": "    refactor: $1 :recycle:"
    },
    {
        "name": "WIP",
        "command": "wip",
        "description": "Work in progress - a wip is a change that is not finished yet, or a change that is not ready to be implemented",
        "input": [
            "What are you working on? "
        ],
        "message": "    wip: $1 :construction:"
    },
    {
        "name": "Visual",
        "command": "visual",
        "description": "Style change - a style change is a change that does not affect the code, but the way it is displayed",
        "input": [],
        "message": "    style: CHanged the way the code is displayed :art:"
    },
    {
        "name": "gitingore",
        "command": "igit",
        "description": "Changes to the .gitignore file",
        "input": [],
        "message": "    gitignore: Updated the gitignore - refer to commit directly :see_no_evil:"
    },
    {
        "name": "Header",
        "command": "header",
        "description": "Changes to .h files",
        "input": [],
        "message": "    header: Made changes to header - refer to commit or title directly :file_cabinet:"
    },
    {
        "name": "Makefile",
        "command": "make",
        "description": "Changes to the Makefile",
        "input": [],
        "message": "    Makefile :hammer:"
    },
    {
        "name": "Coding Style",
        "command": "abricot",
        "description": "Changes to the coding style -- according to the Epitech norm",
        "input": [],
        "message": "    Coding Style :tangerine::banana:"
    },
    {
        "name": "Assets",
        "command": "assets",
        "description": "Changes to the assets - images, sounds, etc.",
        "input":
        [
            "Assets type (ie: images, sounds, etc.)",
            "Assets utility "
        ],
        "message": "    assets($1): $2 :camera:"
    }
]